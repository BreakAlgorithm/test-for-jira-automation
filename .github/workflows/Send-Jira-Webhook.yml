name: Send Jira Webhook
on: push # 모든 브랜치에 대해 실행됩니다.

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "send-jira-webhook"
  send-jira-webhook:
    runs-on: ubuntu-latest # The type of runner that the job will run on
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2

      - name: Extract Branch Name
        id: extract_branch_name
        run: |
          branch_ref=${{ github.ref }}
          # 마지막 "/" 문자열을 기준으로 그 다음 "_" 문자열까지의 문자열을 추출한 뒤에 대문자로 변환 (e.g. feature/iOS-2843_test -> IOS-2843)
          branch_name=$(echo "$branch_ref" | awk -F'/' '{print substr($NF, 1, index($NF, "_")-1)}' | awk '{print toupper($0)}')
          echo "::set-output name=branch_name::$branch_name"
    
      - name: Use Extracted Branch Name
        run: |
          extracted_branch=${{ steps.extract_branch_name.outputs.branch_name }}
          echo "Extracted Branch Name: $extracted_branch"
        
          # 추출한 브랜치 이름이 빈 문자열인 경우에 Jira Webhook을 보내지 않음
          if [[ -z "$extracted_branch" ]]; then
            echo "Branch name is empty. Skipping Jira Webhook."
            exit 0
          fi
          
          # Jira webhook URL
          webhook_url="https://automation.atlassian.com/pro/hooks/ff51aba3cf64a8a40888f4cba03d1be128b8bcd6"
        
          # Jira에 보낼 JSON 데이터 작성
          payload="{\"issues\":[\"$extracted_branch\"]}"
        
          # HTTP POST 요청 보내기
          curl -X POST -H "Content-Type: application/json" -d "$payload" "$webhook_url"
