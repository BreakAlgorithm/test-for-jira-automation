name: Send Jira Webhook
on: push # 모든 브랜치에 대해 실행됩니다.

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "send-jira-webhook"
  send-jira-webhook:
    runs-on: ubuntu-latest # The type of runner that the job will run on
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2

      - name: Extract Branch Name
        id: extract_branch_name
        run: |
          branch_ref=${{ github.ref }}
          # ios, mrt2-숫자n개가 포함되는 문자열을 추출
          branch_name=$(echo "$branch_ref" | awk -F'/' 'match($NF, /[TEST]-[0-9]+/) {print toupper(substr($NF, RSTART, RLENGTH))}')
          echo "::set-output name=branch_name::$branch_name"
          
      - name: Filter Commits
        id: filter_commits
        run: |
          commit_messages=$(git log --pretty=format:%s --no-merges)
          filtered_commits=()
          while read -r line; do
            echo "$line"
            if [[ $line =~ (TEST)-[0-9]+ ]]; then
              filtered_commits+=("$line")
            fi
          done <<< "$commit_messages"
          echo "::set-output name=filtered_commits::${filtered_commits[@]}"
    
      - name: Use Extracted Branch Name
        run: |
          extracted_branch=${{ steps.extract_branch_name.outputs.branch_name }}
          echo "Extracted Branch Name: $extracted_branch"
        
          # 추출한 브랜치 이름이 빈 문자열인 경우에 Jira Webhook을 보내지 않음
          if [[ -z "$extracted_branch" ]]; then
            echo "Branch name is empty. Skipping Jira Webhook."
            exit 0
          fi
          
          filtered_commits=("${{ steps.filter_commits.outputs.filtered_commits }}")
          echo "Filtered Commits:"
          for commit in "${filtered_commits[@]}"; do
            echo "- $commit"
          done
          
          # Jira webhook URL
          webhook_url="https://automation.atlassian.com/pro/hooks/ff51aba3cf64a8a40888f4cba03d1be128b8bcd6"
        
          # Jira에 보낼 JSON 데이터 설정
          payload="{\"issues\":[\"$extracted_branch\"]"
        
          if [[ ${#filtered_commits[@]} -gt 0 ]]; then
            for commit in "${filtered_commits[@]}"; do
              payload+=",\"$commit\""
            done
          fi
        
          payload+="}"
          
          # HTTP POST 요청 보내기
          curl -X POST -H "Content-Type: application/json" -d "$payload" "$webhook_url"
